package components
{	
	import com.yahoo.maps.api.core.location.Address;
	import com.yahoo.maps.webservices.geocoder.GeocoderResult;
	import com.yahoo.maps.webservices.geocoder.events.GeocoderEvent;
	import com.yahoo.webapis.weather.Weather;
	import com.yahoo.webapis.weather.WeatherService;
	import com.yahoo.webapis.weather.events.WeatherResultEvent;
	
	import mx.controls.Alert;
	import mx.controls.Image;
	import mx.controls.Label;
	
	public class WeatherDisplay
	{		
		private var _weatherService:WeatherService;
		private var _weather:Weather;		
		
		public var cityName:Label;
		public var weatherImg:Image;
		public var weatherDisplay:Label;
		
		public var endCityName:Label;
		public var endWeatherImg:Image;
		public var endWeatherDisplay:Label;
		
		
		public var _start:String;
		public var _end:String;
		
		public var flag:int = 0;
		
		public function WeatherDisplay()
		{
			init();
		}
		
		
		public function init():void
		{
			// initialize a new WeatherService object and listen for its WEATHER_LOADED event.
			
			_weatherService = new WeatherService();		
			_weatherService.addEventListener(WeatherResultEvent.WEATHER_LOADED, handleWeatherLoaded);
			
				
		}
		
		public function getWeather(start:String,units:String):void 
		{
			_start = start;
			//_end = end;
			 
			 
			// var cities:Array = [_start,_end];
			 
			 //for(var i:int=0; i<2 ; i++)
			 //{
			 	//flag= flag + 1;
			 	var address:Address = new Address(_start);
			 	address.addEventListener(GeocoderEvent.GEOCODER_SUCCESS, handleGeocodeSuccess);					
				address.geocode();
				//init();
			// }
		}

		private function handleGeocodeSuccess(event:GeocoderEvent):void 
		{
				Alert.show("Here");
				var address:Address = (event.target as Address);
				//Alert.show(""+address.address);
				var result:GeocoderResult = address.geocoderResultSet.firstResult;
				Alert.show(result.city);
				
				_weatherService.getWeather( result.uzip, "f" );		
						
					
		}
			
		private function handleGeocodeFailure(event:GeocoderEvent):void
		{
			Alert.show("failure");
		}
		
		private function handleWeatherLoaded(event:WeatherResultEvent):void
		{
				
				_weather = _weatherService.weather;	
				flag= flag+1;		
				switch(flag)
				{
					
					case 1:
					cityName.text=_weather.location.city ;
					weatherImg.load(_weather.current.imageURL);
					weatherDisplay.text=_weather.current.description + ", " + _weather.current.temperature +"  F";
					break;
					
					case 2:
					endCityName.text=_weather.location.city ;
					endWeatherImg.load(_weather.current.imageURL);
					endWeatherDisplay.text = _weather.current.description +", " + _weather.current.temperature + " F";
					break;
				}
		}	
		
		

	}
}